generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model activity {
  id_activity          Int               @id @default(autoincrement())
  admin_id             Int
  category_activity_id Int
  title                String            @db.VarChar(255)
  created_date         DateTime          @default(now()) @db.DateTime(0)
  image                String?           @db.VarChar(255)
  video                String?           @db.VarChar(255)
  updated_by           Int?
  updated_date         DateTime?         @default(now()) @db.DateTime(0)
  admin                admin             @relation(fields: [admin_id], references: [id_admin], onUpdate: Restrict, map: "activity_ibfk_2")
  category_activity    category_activity @relation(fields: [category_activity_id], references: [id_category_activity], onUpdate: Restrict, map: "activity_ibfk_1")

  @@index([admin_id], map: "admin_id")
  @@index([category_activity_id], map: "category_activity_id")
}

model admin {
  id_admin     Int        @id @default(autoincrement())
  fullname     String     @db.VarChar(255)
  username     String     @db.VarChar(30)
  password     String     @db.VarChar(100)
  created_date DateTime?  @db.DateTime(0)
  photo        String?    @db.VarChar(200)
  address      String?    @db.Text
  phone_number String?    @db.VarChar(15)
  activity     activity[]
  member       member[]
  news         news[]
}

model category_activity {
  id_category_activity Int        @id @default(autoincrement())
  name                 String?    @db.VarChar(30)
  description          String?    @db.VarChar(200)
  activity             activity[]
}

model category_news {
  id_category_news Int     @id @default(autoincrement())
  name             String? @db.VarChar(30)
  description      String? @db.VarChar(200)
  news             news[]
}

model member {
  id_member      Int            @id @default(autoincrement())
  region_id      Int
  nik            String         @db.VarChar(25)
  fullname       String?        @db.VarChar(255)
  photo          String         @db.VarChar(200)
  photo_ktp      String         @db.VarChar(200)
  address        String?        @db.Text
  phone_number   String?        @db.VarChar(15)
  email          String?        @db.VarChar(50)
  place_of_birth String         @db.VarChar(100)
  date_of_birth  DateTime       @db.Date
  gender         member_gender?
  status         Int?           @default(0)
  created_date   DateTime?      @default(now()) @db.DateTime(0)
  admin_id       Int?
  updated_by     Int?
  updated_date   DateTime?      @default(now()) @db.DateTime(0)
  is_deleted     Int?
  deleted_date   DateTime?      @db.DateTime(0)
  admin          admin?         @relation(fields: [admin_id], references: [id_admin], onDelete: Restrict, onUpdate: Restrict, map: "member_ibfk_2")
  region         region         @relation(fields: [region_id], references: [id_regional], onUpdate: Restrict, map: "member_ibfk_1")

  @@index([admin_id], map: "admin_id")
  @@index([region_id], map: "region_id")
  @@index([nik, status], map: "idx_nik_status")
}

model news {
  id_news          Int            @id @default(autoincrement())
  category_news_id Int?
  admin_id         Int?
  title            String         @db.VarChar(255)
  content          String         @db.Text
  created_date     DateTime       @default(now()) @db.DateTime(0)
  image            String?        @db.VarChar(255)
  author           String?        @db.VarChar(150)
  updated_by       Int?
  updated_date     DateTime?      @default(now()) @db.DateTime(0)
  admin            admin?         @relation(fields: [admin_id], references: [id_admin], onDelete: Restrict, onUpdate: Restrict, map: "news_ibfk_2")
  category_news    category_news? @relation(fields: [category_news_id], references: [id_category_news], onDelete: Restrict, onUpdate: Restrict, map: "news_ibfk_1")

  @@index([admin_id], map: "admin_id")
  @@index([category_news_id], map: "category_news_id")
}

model region {
  id_regional     Int      @id @default(autoincrement())
  name            String   @db.VarChar(25)
  kemendagri_code String?  @db.VarChar(10)
  member          member[]
}

model user_log {
  id             Int              @id @default(autoincrement())
  id_member      Int
  region_id      Int
  nik            String           @db.VarChar(25)
  fullname       String?          @db.VarChar(255)
  photo          String           @db.VarChar(200)
  photo_ktp      String           @db.VarChar(200)
  address        String?          @db.Text
  phone_number   String?          @db.VarChar(15)
  email          String?          @db.VarChar(50)
  place_of_birth String           @db.VarChar(100)
  date_of_birth  DateTime         @db.Date
  gender         user_log_gender?
  status         Int?             @default(0)
  created_date   DateTime?        @db.DateTime(0)
  admin_id       Int?
  updated_by     Int?
  updated_date   DateTime?        @db.DateTime(0)
  log_date       DateTime?        @default(now()) @db.DateTime(0)
}

enum member_gender {
  L
  P
}

enum user_log_gender {
  L
  P
}
